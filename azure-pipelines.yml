variables:
  YARN_CACHE_FOLDER: $(Pipeline.Workspace)/.yarn

trigger:
  branches:
    include:
    - master
  tags:
    include:
    - master
    - refs/tags/v*

strategy:
  matrix:
    linux:
      imageName: 'ubuntu-latest'
    mac:
      imageName: 'macOS-10.14'
    windows:
      imageName: 'vs2017-win2016'

pool:
  vmImage: $(imageName)

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '12.x'
  displayName: 'Install Node.js'

- task: Cache@2
  inputs:
    key: 'yarn | "$(Agent.OS)" | yarn.lock'
    restoreKeys: |
       yarn | "$(Agent.OS)"
    path: $(YARN_CACHE_FOLDER)
  displayName: Cache Yarn packages

- bash: curl https://update.code.visualstudio.com/api/update/darwin/stable/latest | grep -oE '"name":"([0-9\.]+)"' > vscode-latest
  displayName: Check vscode-latest darwin
  condition: eq(variables['Agent.OS'], 'Darwin')

- bash: curl https://update.code.visualstudio.com/api/update/win32-x64/stable/latest | grep -oE '"name":"([0-9\.]+)"' > vscode-latest
  displayName: Check vscode-latest windows
  condition: eq(variables['Agent.OS'], 'Windows_NT')

- bash: curl https://update.code.visualstudio.com/api/update/linux-x64/stable/latest | grep -oE '"name":"([0-9\.]+)"' > vscode-latest
  displayName: Check vscode-latest linux
  condition: eq(variables['Agent.OS'], 'Linux')

- task: Cache@2
  inputs:
    key: 'vscode-test | "$(Agent.OS)" | vscode-latest'
    path: .vscode-test
  displayName: Cache vsode-test binaries

- bash: /usr/bin/Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
  displayName: Start xvfb
  condition: and(succeeded(), eq(variables['Agent.OS'], 'Linux'))

- bash: yarn --frozen-lockfile
  displayName: Yarn Install

- bash: yarn test
  displayName: Run Tests
  env:
    DISPLAY: ':99.0'

- bash: yarn deploy
  displayName: Publish
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'), eq(variables['Agent.OS'], 'Linux'))
  env:
    VSCE_PAT: $(vscePAT)
